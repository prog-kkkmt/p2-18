Форматированимие строк "По старинке" (опереатор %).
Стороки в Python содержат уникальную встроенную опереаицю, доступ к которой можно получить чеоз опрератор %. 

name = input()	#Zachar
print ('Hollo, %s' % nane)
#Hollo, Zachar

Определитель формата %s в данном случае, чтобы сказать Python, где имменно заменить значение имени, представленного в виде стороки.

Форматирование строки "По новому" (str.format).
Новый стиль форматирования строк избавляется от специального синтаксиса оператора % и делает синтаксис для форматирования сторок более регулярным. Теперь форматирование обрабатываетсая вызовом .format() в обекте строки.

name = input()  #Zachar
print ('Hello, {}' .format(name))
#Hello, Zachar

Интерполяция строк / f-Строки.
Добавил новый подход форматирования строк под названием форматированные строчные литералы, или “f-строки”. Этот новый способ форматирования строк позволяет вам использовать встроенные выражения Python внутрь строковых констант. Вот простой, наглядный пример:

name = 'Zachar'
print (f'Hello, {name}!')
#Hello, Zachar!

Шаблонные строки (Стандартная библиотека Template Strings).
Рассмотрим еще один инструмент для форматирования строк в Python: template strings. Сначала нам нужно импортировать класс Template из встроенного модуля Python.

from string import Template
t = Template('Hey, $name!')
name = input()  #Zachar
print(t.substitute(name=name))
#Hey, Zachar!

 



