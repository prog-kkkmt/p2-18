# Выполнил:Степаненко Кирилл Алексеевич
# Группа: П2-18


# Форматирование строк с помощью метода format (Инструкция)


# Если для подстановки требуется только один аргумент, то значение - сам аргумент:


# Пример №1


print('Hello, {}!'.format('World'))

# А если несколько, то значениями будут являться все аргументы со строками

# подстановки (обычных или именованных):


# Пример №2


print('{0}, {1}, {2}'.format('a', 'b', 'c'))

# Однако метод format умеет большее. Вот его синтаксис:


# поле замены     : "{" [имя поля] ["!" преобразование] [":" спецификация] #"}"

# имя поля        : arg_name ("." имя атрибута | "[" индекс "]")*

# преобразование  : "r" (внутреннее представление) | "s" (человеческое #представление)

# спецификация    : см. ниже


# Пример №3


print("Units destroyed: {players[0]}".format(players=[1, 2, 3]))

print("Units destroyed: {players[0]!r}".format(players=['1', '2', '3']))

# Cпецификация формата:


# спецификация : [[fill]align][sign][#][0][width][,][.precision][type]

# заполнитель  : символ кроме '{' или '}'

# выравнивание : "<" , ">" , "=" , "^"

# знак         : "+" , "-" , " "

# ширина       : integer

# точность     : integer

# тип          : "d" ,"o" ,"x" ,"X" ,"e" ,"E" ,"f" ,"g" ,"G" ,

#               "c" ,"s" ,"%" ,"x" ,"X" ,"%"


# Выравнивание производится при помощи символа-заполнителя. Доступны #следующие варианты выравнивания:

# < - Символы-заполнители будут справа (выравнивание объекта по левому #краю) (по умолчанию).

# > - Выравнивание объекта по правому краю.

# = - Заполнитель будет после знака, но перед цифрами. Работает только с #числовыми типами.

# ^ - Выравнивание по центру.


# Опция "знак" используется только для чисел и может принимать следующие #значения:

# "+" - Знак должен быть использован для всех чисел.

# "-" - Для отрицательных, ничего для положительных.

# " " - Для положительных.


# Поле "тип" может принимать следующие значения:

# 'd', 'i', 'u' - Десятичное число.

# 'o' - Число в восьмеричной системе счисления.

# 'x' - Число в шестнадцатеричной системе счисления (буквы в нижнем #регистре).

# 'X' -	Число в шестнадцатеричной системе счисления (буквы в верхнем #регистре).

# 'e' -	Число с плавающей точкой с экспонентой (экспонента в нижнем #регистре).

# 'E' - Число с плавающей точкой с экспонентой (экспонента в верхнем #регистре).

# 'f' - Число с плавающей точкой (обычный формат).

# 'g' -	Число с плавающей точкой. с экспонентой (экспонента в нижнем #регистре), если она меньше, чем -4 или точности, иначе обычный формат.

# 'G' -	Число с плавающей точкой. с экспонентой (экспонента в верхнем #регистре), если она меньше, чем -4 или точности, иначе обычный формат.

# 'c' -	Символ (строка из одного символа или число - код символа).

# 's' -	Строка.

# '%' -	Число умножается на 100, отображается число с плавающей #точкой, а за ним знак %.