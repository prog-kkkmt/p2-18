# Выполнил:Степаненко Кирилл
# Группа: П2-18
# Задание 1. Создание класса
# Задание 2. Создание объекта
# Задание 3. Функция init
# Задание 4. Методы объектов
# Задание 5. Параметр self
# Задание 6. Изменение свойств объекта
# Задание 7. Удалить свойства объекта
# Задание 8. Удаление объектов

# Для того, чтобы создать класс, используйте ключевое слово class.
# Создадим класс с именем MyClass и свойством x:
class Myclass:
    x = 5

# Создание объекта
# Теперь мы можем использовать класс под названием myClass для создания #объектов.
# Создадим объект под названием p1, и выведем значение x:
p1 = Myclass()
print(p1.x)

# Функция init
# Приведенные выше примеры — это классы и объекты в их простейшей форме и
# не очень полезны в приложениях.
# Чтобы понять значение классов, нам нужно понять встроенную функцию #__init__.

# У всех классов есть функция под названием __init__(), которая всегда #выполняется при
# создании объекта. Используйте функцию __init__() для добавления #значений #свойствам объекта
# или других операций, которые необходимо выполнить, при создании объекта.

# Для создания класса под названием Person, воспользуемся функцией #__init__(),
# что бы добавить значения для имени и возраста:

class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age
    #       Объекты также содержат методы. Методы в объектах — это
    #       функции, принадлежащие объекту.
    #       Параметр self
    #       Его не обязательно называть self, вы можете называть его как #хотите,
    #       но он должен быть первым параметром любой функции в классе.
    def myFunc(self):
        print('Hello, my name is ' + self.name)

p1 = Person('Vasya', 36)
print(p1.name)
print(p1.age)
# вызов метода
p1.myFunc()
# Изменение свойств объекта
p1.age = 40
print(p1.age)
# Удалить свойства объекта
del p1.age
# print(p1.age) выдаст ошибку
# Удаление объектов
del p1