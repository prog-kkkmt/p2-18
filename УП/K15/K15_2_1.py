# Словарь со значениями по умолчанию.
# Класс defaultdict() модуля collections ни чем не отличается от #обычного
# словаря за исключением того, что по умолчанию всегда вызывается #функция,
# которая возвращает значение по умолчанию для новых значений. Другими
# словами Класс defaultdict() представляет собой словарь со значениями #по
# умолчанию.

# Параметры:

# default_factory - тип данных или функция, которая возвращает значение #по умолчанию для новых значений.

# Описание:

# Класс defaultdict() модуля collections возвращает новый словарь-#подобный
# объект. Defaultdict является подклассом встроенного класса dict().
# Он переопределяет один метод и добавляет одну доступную для записи
# переменную экземпляра.
# Остальная функциональность такая же, как и для класса dict(), и здесь #она не описана.
# Первый аргумент предоставляет начальное значение для атрибута
# default_factory. По умолчанию None.
# Все остальные аргументы обрабатываются так же, как если бы они были
# переданы конструктору dict(), включая ключевые аргументы.

# Дополнительный метод класса defaultdict():

# __missing__(key):
# Если атрибут default_factory равен None, то это вызывает исключение
# KeyError с ключом key в качестве аргумента.
# Если default_factory не равен None, то метод __missing__() вызывается #без
# аргументов для предоставления значения по умолчанию для данного #ключа,
# это значение вставляется в словарь для ключа key.
# Если вызов default_factory вызывает исключение, это исключение
# распространяется без изменений.

# Метод __missing__() вызывается методом __getitem__() класса dict(), #когда
# запрошенный ключ key не найден.
# Все, что он возвращает или поднимает,
# затем возвращается или вызывается методом __getitem__().
# Обратите внимание, что метод __missing__() не вызывается ни для каких
# операций, кроме как __getitem__().
# Это означает, что [метод defaultdict.get()],
# как и обычные словари, будет возвращать None - как значение по #умолчанию,
# а не использовать default_factory.

# Переменная экземпляра класса defaultdict():
# default_factory:
# Этот атрибут используется методом __missing __(). Он инициализируется #из
# первого аргумента, переданного в конструктор,
# если он есть или устанавливается в None, если он отсутствует.

# Пример:

from collections import defaultdict
s = 'Cucumber'
d = defaultdict(int)
for k in s:
    d[k] += 1
sorted(d.items())
# [('c', 2), ('m', 1), ('b', 1),('e', 1),'r', 1), ('u', 2)]